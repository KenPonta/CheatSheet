import { type NextRequest, NextResponse } from "next/server"

interface GenerateCheatSheetRequest {
  topics: Array<{
    topic: string
    content: string
    customContent?: string
  }>
  config: {
    paperSize: string
    orientation: string
    columns: number
    fontSize: string
    referenceText: string
  }
}

function generateCheatSheetHTML(data: GenerateCheatSheetRequest): string {
  const { topics, config } = data

  // Paper size dimensions (in CSS units)
  const paperSizes = {
    a4: { width: "210mm", height: "297mm" },
    letter: { width: "8.5in", height: "11in" },
    legal: { width: "8.5in", height: "14in" },
    a3: { width: "297mm", height: "420mm" },
  }

  const paper = paperSizes[config.paperSize as keyof typeof paperSizes] || paperSizes.a4
  const isLandscape = config.orientation === "landscape"

  const fontSizes = {
    small: "8pt",
    medium: "10pt",
    large: "12pt",
  }

  const fontSize = fontSizes[config.fontSize as keyof typeof fontSizes] || fontSizes.small

  return `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Generated Cheat Sheet</title>
    <style>
        @page {
            size: ${isLandscape ? `${paper.height} ${paper.width}` : `${paper.width} ${paper.height}`};
            margin: 0.5in;
        }
        
        body {
            font-family: 'Arial', sans-serif;
            font-size: ${fontSize};
            line-height: 1.2;
            margin: 0;
            padding: 0;
            color: #333;
        }
        
        .cheat-sheet {
            width: 100%;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }
        
        .header {
            text-align: center;
            margin-bottom: 0.5rem;
            border-bottom: 2px solid #059669;
            padding-bottom: 0.25rem;
        }
        
        .header h1 {
            margin: 0;
            font-size: calc(${fontSize} + 4pt);
            color: #059669;
            font-weight: bold;
        }
        
        .content {
            flex: 1;
            display: grid;
            grid-template-columns: repeat(${config.columns}, 1fr);
            gap: 0.5rem;
            overflow: hidden;
        }
        
        .topic-section {
            break-inside: avoid;
            margin-bottom: 0.5rem;
            border: 1px solid #e5e7eb;
            border-radius: 4px;
            padding: 0.25rem;
            background: #f9fafb;
        }
        
        .topic-title {
            font-weight: bold;
            color: #059669;
            margin-bottom: 0.25rem;
            font-size: calc(${fontSize} + 1pt);
            border-bottom: 1px solid #d1d5db;
            padding-bottom: 0.1rem;
        }
        
        .topic-content {
            font-size: ${fontSize};
            line-height: 1.3;
        }
        
        .reference-section {
            margin-top: 0.5rem;
            padding-top: 0.5rem;
            border-top: 1px solid #d1d5db;
            background: #f3f4f6;
            padding: 0.25rem;
            border-radius: 4px;
        }
        
        .reference-title {
            font-weight: bold;
            color: #374151;
            margin-bottom: 0.25rem;
            font-size: calc(${fontSize} + 1pt);
        }
        
        .footer {
            margin-top: 0.5rem;
            text-align: center;
            font-size: calc(${fontSize} - 1pt);
            color: #6b7280;
            border-top: 1px solid #e5e7eb;
            padding-top: 0.25rem;
        }
        
        @media print {
            body { print-color-adjust: exact; }
            .cheat-sheet { height: auto; }
        }
    </style>
</head>
<body>
    <div class="cheat-sheet">
        <div class="header">
            <h1>Study Cheat Sheet</h1>
        </div>
        
        <div class="content">
            ${topics
              .map(
                (topic) => `
                <div class="topic-section">
                    <div class="topic-title">${topic.topic}</div>
                    <div class="topic-content">${(topic.customContent || topic.content).replace(/\n/g, "<br>")}</div>
                </div>
            `,
              )
              .join("")}
        </div>
        
        ${
          config.referenceText
            ? `
            <div class="reference-section">
                <div class="reference-title">Reference Notes</div>
                <div class="topic-content">${config.referenceText.replace(/\n/g, "<br>")}</div>
            </div>
        `
            : ""
        }
        
        <div class="footer">
            Generated by CheatSheet Creator â€¢ ${new Date().toLocaleDateString()}
        </div>
    </div>
</body>
</html>`
}

export async function POST(request: NextRequest) {
  try {
    const data: GenerateCheatSheetRequest = await request.json()

    if (!data.topics || data.topics.length === 0) {
      return NextResponse.json({ error: "No topics provided" }, { status: 400 })
    }

    const html = generateCheatSheetHTML(data)

    return NextResponse.json({
      html,
      success: true,
      message: `Generated cheat sheet with ${data.topics.length} topics`,
    })
  } catch (error) {
    console.error("Cheat sheet generation error:", error)
    return NextResponse.json({ error: "Failed to generate cheat sheet" }, { status: 500 })
  }
}
